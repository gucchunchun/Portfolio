
				import createSSRHandler from './.netlify/build/entry.mjs';
				export default createSSRHandler({"cacheOnDemandPages":false,"notFoundContent":"<!DOCTYPE html><html lang=\"en\" dir=\"ltr\" class=\"2xl:text-[20px]\"> <head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><link rel=\"sitemap\" href=\"/sitemap-index.xml\"><link rel=\"shortcut icon\"><link rel=\"icon\" type=\"image/svg+xml\"><link rel=\"mask-icon\" color=\"#8D46E7\"><link rel=\"apple-touch-icon\" sizes=\"180x180\"><style>\n  :root {\n    --aw-font-sans: 'Inter Variable';\n    --aw-font-serif: 'Inter Variable';\n    --aw-font-heading: 'Inter Variable';\n\n    --aw-color-primary: rgb(1 97 239);\n    --aw-color-secondary: rgb(1 84 207);\n    --aw-color-accent: rgb(109 40 217);\n\n    --aw-color-text-heading: rgb(0 0 0);\n    --aw-color-text-default: rgb(16 16 16);\n    --aw-color-text-muted: rgb(16 16 16 / 66%);\n    --aw-color-bg-page: rgb(255 255 255);\n\n    --aw-color-bg-page-dark: rgb(3 6 32);\n\n    ::selection {\n      background-color: lavender;\n    }\n  }\n\n  .dark {\n    --aw-font-sans: 'Inter Variable';\n    --aw-font-serif: 'Inter Variable';\n    --aw-font-heading: 'Inter Variable';\n\n    --aw-color-primary: rgb(1 97 239);\n    --aw-color-secondary: rgb(1 84 207);\n    --aw-color-accent: rgb(109 40 217);\n\n    --aw-color-text-heading: rgb(247, 248, 248);\n    --aw-color-text-default: rgb(229 236 246);\n    --aw-color-text-muted: rgb(229 236 246 / 66%);\n    --aw-color-bg-page: rgb(3 6 32);\n\n    ::selection {\n      background-color: black;\n      color: snow;\n    }\n  }\n</style><script>(function(){const defaultTheme = \"system\";\n\n  function applyTheme(theme) {\n    if (theme === 'dark') {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n    const matches = document.querySelectorAll('[data-aw-toggle-color-scheme] > input');\n\n    if (matches && matches.length) {\n      matches.forEach((elem) => {\n        elem.checked = theme !== 'dark';\n      });\n    }\n  }\n\n  if ((defaultTheme && defaultTheme.endsWith(':only')) || (!localStorage.theme && defaultTheme !== 'system')) {\n    applyTheme(defaultTheme.replace(':only', ''));\n  } else if (\n    localStorage.theme === 'dark' ||\n    (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)\n  ) {\n    applyTheme('dark');\n  } else {\n    applyTheme('light');\n  }\n})();</script><title>Error 404 â€” AstroWind</title>\n<meta name=\"description\" content=\"ðŸš€ Suitable for Startups, Small Business, Sass Websites, Professional Portfolios, Marketing Websites, Landing Pages &amp; Blogs.\">\n<meta name=\"robots\" content=\"index,follow\">\n<link rel=\"canonical\" href=\"https://astrowind.vercel.app/404\">\n<meta property=\"og:title\" content=\"Error 404\">\n<meta property=\"og:description\" content=\"ðŸš€ Suitable for Startups, Small Business, Sass Websites, Professional Portfolios, Marketing Websites, Landing Pages &amp; Blogs.\">\n<meta property=\"og:url\" content=\"https://astrowind.vercel.app/404\">\n<meta property=\"og:type\" content=\"website\">\n<meta property=\"og:image\" content=\"https://astrowind.vercel.app/_astro/default.CZ816Hke_2bosb5.jpg\">\n<meta property=\"og:image:width\" content=\"1200\">\n<meta property=\"og:image:height\" content=\"628\">\n\n<meta property=\"og:locale\" content=\"en\">\n<meta property=\"og:site_name\" content=\"Gucchunchun\">\n<meta name=\"twitter:card\" content=\"summary_large_image\">\n<meta name=\"twitter:site\" content=\"@onwidget\">\n<meta name=\"twitter:creator\" content=\"@onwidget\"><meta name=\"google-site-verification\" content=\"orcPxI47GSa-cRvY11tUe6iGg2IO_RPvnA1q95iEM3M\"><!-- Comment the line below to disable View Transitions --><meta name=\"astro-view-transitions-enabled\" content=\"true\"><meta name=\"astro-view-transitions-fallback\" content=\"swap\"><script type=\"module\" src=\"/_astro/ClientRouter.astro_astro_type_script_index_0_lang.rasoniT7.js\"></script><link rel=\"stylesheet\" href=\"/_astro/privacy.8rt_1nTU.css\"></head> <body class=\"antialiased text-default bg-page tracking-tight\">  <section class=\"flex items-center h-full p-16\"> <div class=\"container flex flex-col items-center justify-center px-5 mx-auto my-8\"> <div class=\"max-w-md text-center\"> <h2 class=\"mb-8 font-bold text-9xl\"> <span class=\"sr-only\">Error</span> <span class=\"text-primary\">404</span> </h2> <p class=\"text-3xl font-semibold md:text-3xl\">Sorry, we couldn't find this page.</p> <p class=\"mt-4 mb-8 text-lg text-muted dark:text-slate-400\">\nBut dont worry, you can find plenty of other things on our homepage.\n</p> <a rel=\"noopener noreferrer\" href=\"/\" class=\"btn ml-4\">Back to homepage</a> </div> </div> </section>  <script>(function(){const defaultTheme = \"system\";\n\n  if (window.basic_script) {\n    return;\n  }\n\n  window.basic_script = true;\n\n  function applyTheme(theme) {\n    if (theme === 'dark') {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }\n\n  const initTheme = function () {\n    if ((defaultTheme && defaultTheme.endsWith(':only')) || (!localStorage.theme && defaultTheme !== 'system')) {\n      applyTheme(defaultTheme.replace(':only', ''));\n    } else if (\n      localStorage.theme === 'dark' ||\n      (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)\n    ) {\n      applyTheme('dark');\n    } else {\n      applyTheme('light');\n    }\n  };\n  initTheme();\n\n  function attachEvent(selector, event, fn) {\n    const matches = typeof selector === 'string' ? document.querySelectorAll(selector) : selector;\n    if (matches && matches.length) {\n      matches.forEach((elem) => {\n        elem.addEventListener(event, (e) => fn(e, elem), false);\n      });\n    }\n  }\n\n  function handleLanguageChange(event) {\n  const selectedLang = event.target.value;\n    \n    // Extract current path without leading/trailing slashes\n    const currentPath = window.location.pathname.split(\"/\").slice(2).join(\"/\") || \"\"; \n\n    // Ensure correct URL without duplicate slashes\n    window.location.href =  `/${selectedLang}${currentPath ? `/${currentPath}` : \"\"}`;\n  }\n\n  const onLoad = function () {\n    let lastKnownScrollPosition = window.scrollY;\n    let ticking = true;\n\n    attachEvent('#language-select', 'change', (e) => {\n      handleLanguageChange(e);\n    })\n\n    attachEvent('#header nav', 'click', function () {\n      document.querySelector('[data-aw-toggle-menu]')?.classList.remove('expanded');\n      document.body.classList.remove('overflow-hidden');\n      document.getElementById('header')?.classList.remove('h-screen');\n      document.getElementById('header')?.classList.remove('expanded');\n      document.getElementById('header')?.classList.remove('bg-page');\n      document.querySelector('#header nav')?.classList.add('hidden');\n      document.querySelector('#header > div > div:last-child')?.classList.add('hidden');\n    });\n\n    attachEvent('[data-aw-toggle-menu]', 'click', function (_, elem) {\n      elem.classList.toggle('expanded');\n      document.body.classList.toggle('overflow-hidden');\n      document.getElementById('header')?.classList.toggle('h-screen');\n      document.getElementById('header')?.classList.toggle('expanded');\n      document.getElementById('header')?.classList.toggle('bg-page');\n      document.querySelector('#header nav')?.classList.toggle('hidden');\n      document.querySelector('#header > div > div:last-child')?.classList.toggle('hidden');\n    });\n\n    attachEvent('[data-aw-toggle-color-scheme]', 'click', function () {\n      if (defaultTheme.endsWith(':only')) {\n        return;\n      }\n      document.documentElement.classList.toggle('dark');\n      localStorage.theme = document.documentElement.classList.contains('dark') ? 'dark' : 'light';\n    });\n\n    attachEvent('[data-aw-social-share]', 'click', function (_, elem) {\n      const network = elem.getAttribute('data-aw-social-share');\n      const url = encodeURIComponent(elem.getAttribute('data-aw-url'));\n      const text = encodeURIComponent(elem.getAttribute('data-aw-text'));\n\n      let href;\n      switch (network) {\n        case 'facebook':\n          href = `https://www.facebook.com/sharer.php?u=${url}`;\n          break;\n        case 'twitter':\n          href = `https://twitter.com/intent/tweet?url=${url}&text=${text}`;\n          break;\n        case 'linkedin':\n          href = `https://www.linkedin.com/shareArticle?mini=true&url=${url}&title=${text}`;\n          break;\n        case 'whatsapp':\n          href = `https://wa.me/?text=${text}%20${url}`;\n          break;\n        case 'mail':\n          href = `mailto:?subject=%22${text}%22&body=${text}%20${url}`;\n          break;\n\n        default:\n          return;\n      }\n\n      const newlink = document.createElement('a');\n      newlink.target = '_blank';\n      newlink.href = href;\n      newlink.click();\n    });\n\n    const screenSize = window.matchMedia('(max-width: 767px)');\n    screenSize.addEventListener('change', function () {\n      document.querySelector('[data-aw-toggle-menu]')?.classList.remove('expanded');\n      document.body.classList.remove('overflow-hidden');\n      document.getElementById('header')?.classList.remove('h-screen');\n      document.getElementById('header')?.classList.remove('expanded');\n      document.getElementById('header')?.classList.remove('bg-page');\n      document.querySelector('#header nav')?.classList.add('hidden');\n      document.querySelector('#header > div > div:last-child')?.classList.add('hidden');\n    });\n\n    function applyHeaderStylesOnScroll() {\n      const header = document.querySelector('#header[data-aw-sticky-header]');\n      if (!header) return;\n      if (lastKnownScrollPosition > 60 && !header.classList.contains('scroll')) {\n        header.classList.add('scroll');\n      } else if (lastKnownScrollPosition <= 60 && header.classList.contains('scroll')) {\n        header.classList.remove('scroll');\n      }\n      ticking = false;\n    }\n    applyHeaderStylesOnScroll();\n\n    attachEvent([document], 'scroll', function () {\n      lastKnownScrollPosition = window.scrollY;\n\n      if (!ticking) {\n        window.requestAnimationFrame(() => {\n          applyHeaderStylesOnScroll();\n        });\n        ticking = true;\n      }\n    });\n  };\n  const onPageShow = function () {\n    document.documentElement.classList.add('motion-safe:scroll-smooth');\n    const elem = document.querySelector('[data-aw-toggle-menu]');\n    if (elem) {\n      elem.classList.remove('expanded');\n    }\n    document.body.classList.remove('overflow-hidden');\n    document.getElementById('header')?.classList.remove('h-screen');\n    document.getElementById('header')?.classList.remove('expanded');\n    document.querySelector('#header nav')?.classList.add('hidden');\n  };\n\n  window.onload = onLoad;\n  window.onpageshow = onPageShow;\n\n  document.addEventListener('astro:after-swap', () => {\n    initTheme();\n    onLoad();\n    onPageShow();\n  });\n})();</script> <script>\n  /* Inspired by: https://github.com/heidkaemper/tailwindcss-intersect */\n  const Observer = {\n    observer: null,\n    delayBetweenAnimations: 100,\n    animationCounter: 0,\n\n    start() {\n      const selectors = [\n        '[class*=\" intersect:\"]',\n        '[class*=\":intersect:\"]',\n        '[class^=\"intersect:\"]',\n        '[class=\"intersect\"]',\n        '[class*=\" intersect \"]',\n        '[class^=\"intersect \"]',\n        '[class$=\" intersect\"]',\n      ];\n\n      const elements = Array.from(document.querySelectorAll(selectors.join(',')));\n\n      const getThreshold = (element) => {\n        if (element.classList.contains('intersect-full')) return 0.99;\n        if (element.classList.contains('intersect-half')) return 0.5;\n        if (element.classList.contains('intersect-quarter')) return 0.25;\n        return 0;\n      };\n\n      elements.forEach((el) => {\n        el.setAttribute('no-intersect', '');\n        el._intersectionThreshold = getThreshold(el);\n      });\n\n      const callback = (entries) => {\n        entries.forEach((entry) => {\n          requestAnimationFrame(() => {\n            const target = entry.target;\n            const intersectionRatio = entry.intersectionRatio;\n            const threshold = target._intersectionThreshold;\n\n            if (target.classList.contains('intersect-no-queue')) {\n              if (entry.isIntersecting) {\n                target.removeAttribute('no-intersect');\n                if (target.classList.contains('intersect-once')) {\n                  this.observer.unobserve(target);\n                }\n              } else {\n                target.setAttribute('no-intersect', '');\n              }\n              return;\n            }\n\n            if (intersectionRatio >= threshold) {\n              if (!target.hasAttribute('data-animated')) {\n                target.removeAttribute('no-intersect');\n                target.setAttribute('data-animated', 'true');\n\n                const delay = this.animationCounter * this.delayBetweenAnimations;\n                this.animationCounter++;\n\n                target.style.transitionDelay = `${delay}ms`;\n                target.style.animationDelay = `${delay}ms`;\n\n                if (target.classList.contains('intersect-once')) {\n                  this.observer.unobserve(target);\n                }\n              }\n            } else {\n              target.setAttribute('no-intersect', '');\n              target.removeAttribute('data-animated');\n              target.style.transitionDelay = '';\n              target.style.animationDelay = '';\n\n              this.animationCounter = 0;\n            }\n          });\n        });\n      };\n\n      this.observer = new IntersectionObserver(callback.bind(this), { threshold: [0, 0.25, 0.5, 0.99] });\n\n      elements.forEach((el) => {\n        this.observer.observe(el);\n      });\n    },\n  };\n\n  Observer.start();\n\n  document.addEventListener('astro:after-swap', () => {\n    Observer.start();\n  });\n</script> </body></html>"});
				export const config = {
					includedFiles: ['**/*'],
					name: 'Astro SSR',
					nodeBundler: 'none',
					generator: '@astrojs/netlify@6.1.0',
					path: '/*',
					preferStatic: true,
				};
			